
services:
  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  db:
    image: postgres:16
    restart: "always"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    build:
      dockerfile: deployments/docker/local/Dockerfile
      context: ../../..
      target: dev
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "until pg_isready -h ${POSTGRES_HOST_INNER_HOST} -p ${POSTGRES_PORT}; do sleep 1; done; make service_migrate_inner ENV=local"

  app:
    build:
      dockerfile: deployments/docker/test/Dockerfile
      context: ../../..
      target: dev
    restart: "always"
    ports:
      - "${GRPC_SERVER_PORT}:${GRPC_SERVER_PORT}"
      - "${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}"
    depends_on:
      db:
        condition: service_healthy
    command: ./api --config=${CONFIG_PATH}
volumes:
  minio-storage: